# -*- coding: utf-8 -*-
"""sales_prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1emHzn5DmLWxHEupthHL-tCLabsdXfXNz
"""

# CODSOFT Internship - Task 4: Sales Prediction using Python
# Author: KAMALEESHWARI P

# Step 1: Upload the dataset (advertising.csv)
from google.colab import files
print("📁 Upload 'advertising.csv' file below:")
uploaded = files.upload()

# Step 2: Import required libraries
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Step 3: Load the dataset
df = pd.read_csv("advertising.csv")  # ✅ File name corrected
print("\n✅ First 5 rows:")
print(df.head())

# Step 4: Dataset info
print("\n🔍 Dataset Info:")
print(df.info())

# Step 5: Check for null values
print("\n🧼 Null values:\n", df.isnull().sum())

# Step 6: Visualize relationships
sns.pairplot(df, x_vars=['TV', 'Radio', 'Newspaper'], y_vars='Sales', height=4, aspect=1, kind='scatter')
plt.suptitle("Sales vs Advertising Spend", y=1.02)
plt.show()

# Step 7: Feature and target split
X = df[['TV', 'Radio', 'Newspaper']]
y = df['Sales']

# Step 8: Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 9: Train Linear Regression Model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 10: Make predictions
y_pred = model.predict(X_test)

# Step 11: Evaluate performance
r2 = r2_score(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)

print(f"\n✅ R² Score: {r2:.4f}")
print(f"📉 Mean Squared Error: {mse:.4f}")

# Step 12: Plot actual vs predicted
plt.figure(figsize=(8,6))
plt.scatter(y_test, y_pred, color='blue', edgecolor='k')
plt.xlabel("Actual Sales")
plt.ylabel("Predicted Sales")
plt.title("Actual vs Predicted Sales")
plt.grid(True)
plt.show()